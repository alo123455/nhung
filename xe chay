#include "stm32f4xx.h"

// Cấu hình PWM trên chân PC0 và PC1
void PWM_Config(void) {
    // Bật xung clock cho GPIOC và TIM3
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIOCEN;
    RCC->APB1ENR |= RCC_APB1ENR_TIM3EN;
    
    // Cấu hình chân PC0 và PC1 là chức năng AF2 (TIM3)
    GPIOC->MODER &= ~(GPIO_MODER_MODER0 | GPIO_MODER_MODER1);  // Xóa cấu hình ban đầu
    GPIOC->MODER |= (GPIO_MODER_MODER0_1 | GPIO_MODER_MODER1_1);  // Chế độ alternate function
    GPIOC->AFR[0] &= ~(0xF << (0 * 4) | 0xF << (1 * 4));  // Xóa AFR cũ
    GPIOC->AFR[0] |= (2 << (0 * 4) | 2 << (1 * 4));  // Chọn AF2 (TIM3)
    
    // Cấu hình Timer 3
    TIM3->PSC = 84 - 1;  // Prescaler: 84MHz/84 = 1MHz (1us)
    TIM3->ARR = 1000 - 1;  // Chu kỳ PWM: 1000us = 1kHz
    
    // Cấu hình kênh 1 và 2 ở chế độ PWM
    TIM3->CCMR1 &= ~(TIM_CCMR1_OC1M | TIM_CCMR1_OC2M);
    TIM3->CCMR1 |= (TIM_CCMR1_OC1M_1 | TIM_CCMR1_OC1M_2) |  // PWM mode 1 cho kênh 1
                   (TIM_CCMR1_OC2M_1 | TIM_CCMR1_OC2M_2);   // PWM mode 1 cho kênh 2
    
    // Bật đầu ra cho kênh 1 và 2
    TIM3->CCER |= TIM_CCER_CC1E | TIM_CCER_CC2E;
    
    // Bật Timer
    TIM3->CR1 |= TIM_CR1_CEN;
}

// Hàm đặt độ rộng xung cho kênh 1 (PC0)
void SetPWM_Channel1(uint16_t dutyCycle) {
    TIM3->CCR1 = dutyCycle;
}

// Hàm đặt độ rộng xung cho kênh 2 (PC1)
void SetPWM_Channel2(uint16_t dutyCycle) {
    TIM3->CCR2 = dutyCycle;
}

int main(void) {
    PWM_Config();
    
    // Ví dụ: Đặt độ rộng xung 50% cho cả hai kênh
    SetPWM_Channel1(500);  // 50% chu kỳ làm việc
    SetPWM_Channel2(500);  // 50% chu kỳ làm việc
    
    while(1) {
        // Chương trình chính
    }
}
